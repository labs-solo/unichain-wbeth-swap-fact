services:

# ──────────────────────────────────────────────────────────────
# 1. PostgreSQL 16 (time-zone aware, lightweight Alpine image)
# ──────────────────────────────────────────────────────────────
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-secret}"
    ports: ["5432:5432"]
    volumes: ["pgdata:/var/lib/postgresql/data"]
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5

# ──────────────────────────────────────────────────────────────
# 2. Envio HyperIndex – Uniswap v4 template (public image)
# ──────────────────────────────────────────────────────────────
  hyperindex:
    build:
      context: ./infra/hyperindex
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    env_file: [.env]
    volumes:
      - .:/workdir
      - hyperindex_cache:/root/.envio
    working_dir: /workdir
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      retries: 5

# ──────────────────────────────────────────────────────────────
# 3. cron (daily refresh)  – runs inside a tiny Alpine image
# ──────────────────────────────────────────────────────────────
  refresher:
    image: alpine:3.19
    restart: unless-stopped
    depends_on:
      - hyperindex
    env_file: [.env]
    volumes:
      - .:/workdir
    working_dir: /workdir
    command: 
      - sh
      - -c
      - |
        # Install required packages
        apk add --no-cache postgresql-client python3 py3-pip crond
        pip3 install psycopg2-binary requests
        
        # Set up cron job for 02:00 UTC daily
        echo "0 2 * * * cd /workdir && /bin/sh scripts/daily_refresh.sh >> /var/log/daily_refresh.log 2>&1" > /etc/crontabs/root
        
        # Run initial refresh
        echo "Running initial refresh..."
        /bin/sh scripts/daily_refresh.sh
        
        # Start cron daemon
        echo "Starting cron daemon..."
        crond -f -l 2

volumes:
  pgdata:          # durable Postgres storage
  hyperindex_cache: # optional: keeps ABI + block-cache across restarts